eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CgogICAgdGVzdC1hbmQtYnVpbGQtYmluYXJpZXM6CiAgICAgICAgaW1hZ2U6IGRlaXMvZ28tZGV2CiAgICAgICAgY29tbWFuZHM6CiAgICAgICAgICAgIC0gZXhwb3J0IEdPUEFUSD1gcHdkYAogICAgICAgICAgICAtIG1ha2UKICAgICAgICB3aGVuOgogICAgICAgICAgICBicmFuY2g6IFtkZXZlbG9wLCBtYXN0ZXJdCiAgICAgICAgICAgCiAgICBidWlsZC1zdHlsZWd1aWRlOgogICAgICAgIGltYWdlOiBub2RlOjguMS40CiAgICAgICAgY29tbWFuZHM6CiAgICAgICAgICAgIC0gbnBtIHJ1biBidWlsZAogICAgICAgIHdoZW46CiAgICAgICAgICAgIGJyYW5jaDogW2RldmVsb3AsIG1hc3Rlcl0KCiAgICBkZXBsb3ktc3R5bGVndWlkZS1jZG46CiAgICAgICAgaW1hZ2U6IHBsdWdpbnMvczMKICAgICAgICBhY2w6IHB1YmxpYy1yZWFkCiAgICAgICAgcmVnaW9uOiAidXMtZWFzdC0xIgogICAgICAgIGJ1Y2tldDogImNkbi5rb3dhbGEudGVjaCIKICAgICAgICBzb3VyY2U6IHNyYy9rb3dhbGEvc3R5bGVndWlkZS9kaXN0L2Fzc2V0cy90b29sa2l0LyoqLyoKICAgICAgICBzdHJpcF9wcmVmaXg6IHNyYy9rb3dhbGEvc3R5bGVndWlkZS9kaXN0L2Fzc2V0cy90b29sa2l0CiAgICAgICAgdGFyZ2V0OiAvYXNzZXRzL3Rvb2xraXQKICAgICAgICBlbmNyeXB0aW9uOiBBRVMyNTYKICAgICAgICB3aGVuOgogICAgICAgICAgICBicmFuY2g6IFtkZXZlbG9wLCBtYXN0ZXJdCgogICAgZGVwbG95LXN0eWxlZ3VpZGU6CiAgICAgICAgaW1hZ2U6IHBsdWdpbnMvczMKICAgICAgICBhY2w6IHB1YmxpYy1yZWFkCiAgICAgICAgcmVnaW9uOiAidXMtZWFzdC0xIgogICAgICAgIGJ1Y2tldDogInN0eWxlZ3VpZGUua293YWxhLmlvIgogICAgICAgIHNvdXJjZTogc3JjL2tvd2FsYS9zdHlsZWd1aWRlL2Rpc3QvKiovKgogICAgICAgIHN0cmlwX3ByZWZpeDogc3JjL2tvd2FsYS9zdHlsZWd1aWRlL2Rpc3QKICAgICAgICB0YXJnZXQ6IC8KICAgICAgICBlbmNyeXB0aW9uOiBBRVMyNTYKICAgICAgICB3aGVuOgogICAgICAgICAgICBicmFuY2g6IFtkZXZlbG9wLCBtYXN0ZXJdCiAgICAgICAgICAgIAogICAgYnVpbGQtYW5kcm9pZC1hcHA6CiAgICAgICAgaW1hZ2U6IGtvd2FsYS9yZWFjdC1uYXRpdmUKICAgICAgICBzZWNyZXRzOiBbYW5kcm9pZF9rZXlfcGFzc3dvcmRdCiAgICAgICAgZW52aXJvbm1lbnQ6CiAgICAgICAgICAgIC0gQU5EUk9JRF9LRVlfRklMRT1yZWxlYXNlLWtleS5rZXlzdG9yZQogICAgICAgICAgICAtIEFORFJPSURfS0VZX0FMSUFTPXJlbGVhc2Uta2V5CiAgICAgICAgICAgIC0gQU5EUk9JRF9LRVlfUEFTUz0kYW5kcm9pZF9rZXlfcGFzc3dvcmQKICAgICAgICB2b2x1bWVzOgogICAgICAgICAgICAtIC9tbnQvZGVwbG95bWVudC1rZXlzL2FuZHJvaWQ6L21udC9kZXBsb3ltZW50LWtleXMvYW5kcm9pZAogICAgICAgIGNvbW1hbmRzOgogICAgICAgICAgICAtIGNkIHNyYy9rb3dhbGEvYXBwL25hdGl2ZQogICAgICAgICAgICAtIGNwIC9tbnQvZGVwbG95bWVudC1rZXlzL2FuZHJvaWQvcmVsZWFzZS1rZXkua2V5c3RvcmUgYW5kcm9pZC9hcHAKICAgICAgICAgICAgLSBtYWtlCiAgICAgICAgd2hlbjoKICAgICAgICAgICAgYnJhbmNoOiBbZGV2ZWxvcCwgbWFzdGVyLCBmZWF0dXJlL2FkZC1yZWFjdC1hcHBdCgogICAgbm90aWZ5OgogICAgICAgIGltYWdlOiBwbHVnaW5zL3NsYWNrCiAgICAgICAgd2ViaG9vazogaHR0cHM6Ly9ob29rcy5zbGFjay5jb20vc2VydmljZXMvVDZIUjJGNTYxL0I2SlU4Qzk0Sy9OcVluQzduV045MWs5V3Z5cHNsaWMwcE4KICAgICAgICBjaGFubmVsOiBkZXYKICAgICAgICB1c2VybmFtZToga293YWxhLXRlY2gvY29yZSBkcm9uZQogICAgICAgIHRlbXBsYXRlOiA-CiAgICAgICAgICAgICpCdWlsZCAje3tidWlsZC5udW1iZXJ9fSogb24gYnJhbmNoIHt7YnVpbGQuYnJhbmNofX0gKnt7I3N1Y2Nlc3MgYnVpbGQuc3RhdHVzfX1zdWNjZXNzZnVse3tlbHNlfX1mYWlsZWR7ey9zdWNjZXNzfX0qIGluIHt7c2luY2UgYnVpbGQuc3RhcnRlZH19CgogICAgICAgICAgICA-ICR7RFJPTkVfQ09NTUlUX01FU1NBR0V9CgogICAgICAgICAgICBfVHJpZ2dlcmVkIGJ5IGEge3tidWlsZC5ldmVudH19IGZyb20ge3tidWlsZC5hdXRob3J9fV8uCgogICAgICAgICAgICB7eyNpZiBidWlsZC50YWd9fWB2e3tidWlsZC50YWd9fWAgfCB7ey9pZn19PCR7RFJPTkVfQ09NTUlUX0xJTkt9fHt7YnVpbGQuY29tbWl0fX0-IHwgPHt7YnVpbGQubGlua319fEJ1aWxkICN7e2J1aWxkLm51bWJlcn19PgogICAgICAgIHdoZW46CiAgICAgICAgICAgIGJyYW5jaDogW2RldmVsb3AsIG1hc3Rlcl0K.DFsAlvPaau02d1by5rlDjB6erTMflzxls35Y9_Q_bj4